{"version":3,"sources":["apiConfig.js","SinglePark.js","history.js","Auth.js","Parks.js","Header.js","NavBar.js","Callback.js","Scroll.js","App.js","History.js","index.js"],"names":["apiUrls","apiUrl","window","location","hostname","SinglePark","props","state","park","axios","this","target","response","setState","data","className","src","image","alt","name","established","area","rec_visitors","description","Component","createHistory","basename","Auth","requestedScopes","auth0","WebAuth","domain","audience","clientID","redirectUri","responseType","scope","handleAuthentication","parseHash","err","authResult","console","log","accessToken","idToken","setSession","history","replace","isAuthenticated","expiresAt","JSON","parse","localStorage","getItem","Date","getTime","profile","authorize","idTokenPayload","exp","scopes","setItem","nickname","picture","stringify","email","logout","returnTo","removeItem","Promise","resolve","reject","checkSession","Error","parsedScopes","grantedScopes","split","every","includes","Parks","openModal","event","modal","selectedTarget","currentTarget","id","closeModal","handleVisit","a","url","user","method","list","getUser","visited","filter","parks","_id","notVisited","all","bind","parkResponse","temp","auth0Client","clearInterval","interval","getProfile","userResponse","User","length","createUser","then","setInterval","filler","buttonsHTML","onClick","parksHTML","map","key","icon","faMinusCircle","faPlusCircle","thumbnail","Header","withRouter","faSignInAlt","signIn","faSignOutAlt","signOut","Callback","Scroll","showUnder","duration","easing","style","faCaretSquareUp","App","checkingSession","pathname","silentAuth","forceUpdate","error","Route","path","render","appJsx","Router","History","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a350d3d0.chunk.js","sourcesContent":["let apiUrl\nconst apiUrls = {\n  production: 'https://national-parks-mm.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport apiUrl from './apiConfig'\n\nclass SinglePark extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      park: {},\n    }\n  }\n\n  async componentDidMount () {\n    const response = await axios(`${apiUrl}/parks/${this.props.target}`)\n    this.setState({ park: response.data.park})\n  }\n\n\n  render () {\n    const { park } = this.state\n    return (\n      <div className=\"park-modal\">\n      <div className=\"single-park-flex\">\n        <div className=\"park-image-container\">\n          <img\n            src={park.image}\n            alt=\"temp\"\n            className=\"modal-image\"/>\n            </div>\n        <div className=\"park-info\">\n          <h3 className=\"modal-header\">{park.name}</h3>\n          <h6 className=\"modal-sub-header\"><i>{park.location}</i></h6>\n          <div className=\"modal-resp\">\n            <p className=\"info thirty-padding-top est\"><b>Established: </b>{park.established}</p>\n            <p className=\"info area\"><b>Area: </b>{park.area}</p>\n            <p className=\"info vis\"><b>Total Visitors: </b>{park.rec_visitors}</p>\n          </div>\n          <p className=\"modal-park-desc\">{park.description}</p>\n        </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SinglePark\n","import createHistory from 'history/createBrowserHistory';\n\nexport default createHistory({\n  basename: process.env.NODE_ENV === 'development' ? '/' : '/todomvc-authorization-client'\n});\n","import auth0 from 'auth0-js';\nimport history from './history';\n\nexport default class Auth {\n  requestedScopes = 'openid profile'\n\n  auth0 = new auth0.WebAuth({\n      // the following three lines MUST be updated\n    domain: 'dev-0r9j-iz3.auth0.com',\n    audience: 'https://dev-0r9j-iz3.auth0.com/userinfo',\n    clientID: '1HbLQ6nRcscQnN2UY5i79et3CRBQq3zQ',\n    redirectUri: 'https://mmarsden89.github.io/national-park-prototype/callback',\n    responseType: 'id_token',\n    scope: this.requestedScopes\n  });\n\n  getProfile() {\n    return this.profile;\n  }\n\n  getIdToken() {\n    return this.idToken;\n  }\n\n  isAuthenticated() {\n    return new Date().getTime() < this.expiresAt;\n  }\n\n  signIn() {\n    this.auth0.authorize();\n  }\n\n  handleAuthentication = () => {\n    this.auth0.parseHash((err, authResult) => {\n      console.log(authResult)\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        this.setSession(authResult);\n        history.replace('/');\n      } else if (err) {\n        history.replace('/');\n        console.log(err);\n      }\n    });\n  }\n\n  setSession(authResult) {\n    this.idToken = authResult.idToken;\n    this.profile = authResult.idTokenPayload;\n    // set the time that the id token will expire at\n    let expiresAt = authResult.idTokenPayload.exp * 1000;\n\n    const scopes = authResult.scope || this.requestedScopes || '';\n\n    localStorage.setItem('access_token', authResult.accessToken);\n    localStorage.setItem('id_token', authResult.idToken);\n    localStorage.setItem('expires_at', expiresAt);\n    localStorage.setItem('name', authResult.idTokenPayload.nickname);\n    localStorage.setItem('avatar', authResult.idTokenPayload.picture);\n    // store scopes\n    localStorage.setItem('scopes', JSON.stringify(scopes));\n    localStorage.setItem('email', authResult.idTokenPayload.email);\n    // navigate to the home route\n    history.replace('/');\n}\n\n  signOut() {\n    this.auth0.logout({\n      returnTo: 'https://mmarsden89.github.io/national-park-prototype/callback',\n      clientID: '1HbLQ6nRcscQnN2UY5i79et3CRBQq3zQ',\n    });\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('expires_at');\n    localStorage.removeItem('name');\n    localStorage.removeItem('avatar');\n    localStorage.removeItem('scopes');\n    localStorage.removeItem('email');\n    // navigate to the home route\n    history.replace('/');\n  }\n\n  silentAuth() {\n    return new Promise((resolve, reject) => {\n      this.auth0.checkSession({}, (err, authResult) => {\n        if (err) return reject(err);\n        this.setSession(authResult);\n        resolve();\n      });\n    });\n  }\n\n    // checks if the user is authenticated\n  isAuthenticated = () => {\n    // Check whether the current time is past the\n    // access token's expiry time\n    let expiresAt = JSON.parse(localStorage.getItem('expires_at'));\n    return new Date().getTime() < expiresAt;\n  }\n\n  getAccessToken() {\n    const accessToken = localStorage.getItem('access_token');\n    if (!accessToken) {\n      throw new Error('No access token found');\n    }\n    return accessToken;\n  }\n\n  userHasScopes(scopes) {\n    const parsedScopes = JSON.parse(localStorage.getItem('scopes'));\n    if (!parsedScopes) {\n      return false;\n    }\n    const grantedScopes = parsedScopes.split(' ');\n    return scopes.every(scope => grantedScopes.includes(scope));\n  }\n\n  getUserEmail() {\n  return localStorage.getItem('email');\n  }\n\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport SinglePark from './SinglePark'\nimport apiUrl from './apiConfig'\nimport auth0Client from './Auth';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusCircle, faMinusCircle } from '@fortawesome/free-solid-svg-icons'\n\nclass Parks extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      parks: [],\n      filter: [],\n      modal: false,\n      selectedTarget: '',\n      user: {\n        list: []\n      }\n    }\n     this.getUser = this.getUser.bind(this)\n  }\n\n  async componentDidMount () {\n    const parkResponse = await axios(`${apiUrl}/parks`)\n    this.setState({ parks: parkResponse.data.parks, filter: parkResponse.data.parks })\n    const temp = {list: []}\n    this.setState({ user: temp})\n    this.getUser()\n  }\n\n  async getUser () {\n    if (auth0Client.isAuthenticated()) {\n      clearInterval(window.interval)\n      const userResponse = await axios(`${apiUrl}/users/${auth0Client.getProfile().nickname}`)\n      if (userResponse.data.User.length < 1) {\n        this.createUser()\n          .then(this.getUser)\n      } else {\n      this.setState({user: userResponse.data.User[0]})\n      }\n    } else {\n      window.interval = setInterval(this.getUser, 1000)\n    }\n  }\n\n  async createUser() {\n      await axios({\n        url: apiUrl + '/users',\n        method: 'POST',\n        data: {\n          user: {\n            nickname: auth0Client.getProfile().nickname\n          }\n        }\n      })\n  }\n\n  openModal = event => {\n    this.setState({ modal: !this.state.modal, selectedTarget: event.currentTarget.id })\n  }\n\n  closeModal = () => {\n    if (this.state.modal) {\n    this.setState({modal: false})\n    }\n  }\n\n  handleVisit = async event => {\n  const id = event.target.id\n  await axios({\n    url: apiUrl + `/Users/${this.state.user.nickname}`,\n    method: 'PATCH',\n    data: {\n      user: {\n        list: id\n      }\n    }\n  })\n  this.getUser()\n}\n\n  visited = () => {\n    const filter = this.state.parks.filter((park) => {\n      return this.state.user.list.includes(park._id)\n    })\n    this.setState({filter: filter})\n  }\n\n  notVisited = () => {\n    const filter = this.state.parks.filter((park) => {\n      return !this.state.user.list.includes(park._id)\n    })\n    this.setState({filter: filter})\n  }\n\n  all = () => {\n    this.setState({filter: this.state.parks })\n  }\n\n\n  render () {\n    const { filter } = this.state\n    const { list } = this.state.user\n    const filler =\n      <div className=\"filler\">\n      </div>\n    const buttonsHTML =\n      <div className=\"filter-buttons-div\">\n        <button onClick={this.all} className=\"filter-buttons\">All</button>\n        <button onClick={this.visited} className=\"filter-buttons\">Visted</button>\n        <button onClick={this.notVisited} className=\"filter-buttons\">Not-Visited</button>\n      </div>\n    const parksHTML = filter.map(park => (\n      <div key={park._id} id={park._id} className=\"parks\">\n      {auth0Client.isAuthenticated() ? (list.includes(park._id) ?\n      <FontAwesomeIcon icon={faMinusCircle} onClick={this.handleVisit} id={park._id} className=\"plusOrMinus\"/>\n    : <FontAwesomeIcon icon={faPlusCircle} onClick={this.handleVisit} id={park._id} className=\"plusOrMinus\"/>) : null}\n        <div className=\"park-container\"onClick={this.openModal} id={park._id}>\n        <img src={park.thumbnail}\n             alt={\"thumbnail of \" + park.name}\n             className=\"park-thumbnail\"/>\n          <div className=\"info-grid\">\n            <p className=\"park-name\">{park.name} National Park</p>\n            <p className=\"info\"> <b>Location:</b> {park.location} <b>Founded:</b> {park.established}</p>\n            <p className=\"info\"> <b>Total Area:</b> {park.area} <b>Total Visitors:</b> {park.rec_visitors}</p>\n            <p className=\"info desc\">{park.description}</p>\n          </div>\n        </div>\n      </div>\n    ))\n    return (\n      <div className=\"container\" onClick={this.closeModal}>\n        {auth0Client.isAuthenticated() ? buttonsHTML : filler}\n        {parksHTML}\n        {this.state.modal ? <SinglePark target={this.state.selectedTarget}/> : null}\n      </div>\n    )\n  }\n}\n\nexport default Parks\n","import React, { Component } from 'react'\n\nconst headerImage = \"https://img.pngio.com/forest-silhouette-png-101-images-in-collection-page-2-forest-silhouette-png-1400_471.png\"\n\nclass Header extends Component {\n\n\n  render () {\n    return (\n      <div className=\"header-app\">\n        <img src={headerImage}\n          alt=\"\"\n          className=\"image-header\"/>\n        <h1 className=\"logo-text\">NATIONAL PARKS</h1>\n      </div>\n    )\n  }\n}\n\nexport default Header\n","import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport auth0Client from './Auth';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSignOutAlt, faSignInAlt } from '@fortawesome/free-solid-svg-icons'\n\nfunction NavBar(props) {\n\n  const signOut = () => {\n    auth0Client.signOut();\n    props.history.replace('/');\n  }\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbar-container\">\n        {\n          !auth0Client.isAuthenticated() &&\n          <FontAwesomeIcon icon={faSignInAlt} className=\"signout\" onClick={auth0Client.signIn}/>\n        }\n        {\n          auth0Client.isAuthenticated() &&\n          <div className=\"profile-area\">\n            <label className=\"nickname\">{auth0Client.getProfile().nickname}</label>\n            <FontAwesomeIcon icon={faSignOutAlt} onClick={() => {signOut()}} className=\"signout\"/>\n          </div>\n        }\n      </div>\n      <div className=\"gradient\">\n      </div>\n    </nav>\n  )\n}\n\nexport default withRouter(NavBar);\n","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport auth0Client from './Auth';\n\nclass Callback extends Component {\n  async componentDidMount() {\n    await auth0Client.handleAuthentication();\n    this.props.history.replace('/');\n  }\n\n  render() {\n    return (\n      <div className=\"callback-load\">\n        <p>Loading profile...</p>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Callback);\n","import React from 'react'\nimport ScrollToTop from 'react-scroll-up'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCaretSquareUp } from '@fortawesome/free-solid-svg-icons'\n\nfunction Scroll() {\n  return (\n    <ScrollToTop\n      showUnder={160}\n      duration={1500}\n      easing={'easeInOutCubic'}\n      style={{'transitionDuration': '1s'}}>\n      <FontAwesomeIcon icon={faCaretSquareUp} className=\"scrollUp\"/>\n    </ScrollToTop>\n)}\n\nexport default Scroll\n","import React, {Component} from 'react';\nimport './App.scss';\nimport './Navbar.scss';\nimport './Scroll.scss';\nimport Parks from './Parks'\nimport {Route, withRouter} from 'react-router-dom';\nimport Header from './Header'\nimport NavBar from './NavBar'\nimport Callback from './Callback';\nimport Scroll from './Scroll'\nimport auth0Client from './Auth'\n\n// Admin\n// import CreateParks from './Admin/CreateParks'\n\nclass App extends Component {\n  constructor(props) {\n  super(props);\n  this.state = {\n    checkingSession: true,\n  }\n}\n  async componentDidMount() {\n    if (this.props.location.pathname === '/callback') {\n      this.setState({checkingSession:false});\n      return\n  }\n    try {\n      await auth0Client.silentAuth();\n      this.forceUpdate();\n    } catch (err) {\n      if (err.error !== 'login_required') console.log(err);\n    }\n    this.setState({checkingSession:false});\n  }\n  render() {\n  return (\n    <div className=\"App\">\n      <NavBar/>\n      <Scroll/>\n      <div className=\"App-body\">\n          <Header/>\n          <Parks/>\n          <Route path=\"/callback\" render={(props) => {\n            auth0Client.handleAuthentication(props);\n            return <Callback {...props} />\n          }}\n          />\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(App);\n","import createHistory from 'history/createBrowserHistory';\n\nexport default createHistory({\n  basename: process.env.NODE_ENV === 'development' ? '/' : '/todomvc-authorization-client'\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Router } from 'react-router-dom'\nimport History from './History'\n\nconst appJsx = (\n  <Router history={History}>\n    <App />\n  </Router>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}