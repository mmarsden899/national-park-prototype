{"version":3,"sources":["forest.png","apiConfig.js","SinglePark.js","History.js","Auth.js","Parks.js","Header.js","NavBar.js","Callback.js","Scroll.js","App.js","index.js"],"names":["module","exports","apiUrls","apiUrl","window","location","hostname","SinglePark","props","state","park","axios","this","target","response","setState","data","className","src","image","alt","name","established","area","rec_visitors","description","Component","createHistory","require","createBrowserHistory","basename","auth","auth0","WebAuth","domain","audience","clientID","redirectUri","responseType","scope","getProfile","bind","handleAuthentication","isAuthenticated","signIn","signOut","profile","idToken","expiresAt","JSON","parse","localStorage","getItem","Date","getTime","authorize","parseHash","err","authResult","setSession","history","replace","idTokenPayload","accessToken","exp","setItem","logout","returnTo","removeItem","Promise","resolve","reject","checkSession","Parks","openModal","event","modal","selectedTarget","currentTarget","id","closeModal","handleVisit","a","url","user","nickname","method","list","getUser","visited","filter","parks","includes","_id","notVisited","all","parkResponse","temp","console","log","nextProps","nextState","userResponse","User","length","createUser","then","filler","buttonsHTML","onClick","parksHTML","map","key","icon","faMinusCircle","faPlusCircle","thumbnail","headerImage","Header","NavBar","authenticated","faSignInAlt","faSignOutAlt","withRouter","Callback","Scroll","showUnder","duration","easing","style","faCaretSquareUp","App","checkingSession","pathname","silentAuth","forceUpdate","error","Route","path","render","appJsx","Router","History","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b7cf0453.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/forest.ba63b6bd.png\";","let apiUrl\nconst apiUrls = {\n  production: 'https://national-parks-mm.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport apiUrl from './apiConfig'\n\nclass SinglePark extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      park: {},\n    }\n  }\n\n  async componentDidMount () {\n    const response = await axios(`${apiUrl}/parks/${this.props.target}`)\n    this.setState({ park: response.data.park})\n  }\n\n\n  render () {\n    const { park } = this.state\n    return (\n      <div className=\"park-modal\">\n      <div className=\"single-park-flex\">\n        <div className=\"park-image-container\">\n          <img\n            src={park.image}\n            alt=\"temp\"\n            className=\"modal-image\"/>\n            </div>\n        <div className=\"park-info\">\n          <h3 className=\"modal-header\">{park.name}</h3>\n          <h6 className=\"modal-sub-header\"><i>{park.location}</i></h6>\n          <div className=\"modal-resp\">\n            <p className=\"info thirty-padding-top est\"><b>Established: </b>{park.established}</p>\n            <p className=\"info area\"><b>Area: </b>{park.area}</p>\n            <p className=\"info vis\"><b>Total Visitors: </b>{park.rec_visitors}</p>\n          </div>\n          <p className=\"modal-park-desc\">{park.description}</p>\n        </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SinglePark\n","const createHistory = require('history').createBrowserHistory;\n\nexport default createHistory({\n  basename: process.env.NODE_ENV === 'development' ? '/' : '/national-park-prototype'\n});\n","import auth0 from 'auth0-js'\nimport history from './History'\n\nclass Auth {\n  constructor() {\n\n  this.auth0 = new auth0.WebAuth({\n      // the following three lines MUST be updated\n    domain: 'dev-0r9j-iz3.auth0.com',\n    audience: 'https://dev-0r9j-iz3.auth0.com/userinfo',\n    clientID: '1HbLQ6nRcscQnN2UY5i79et3CRBQq3zQ',\n    redirectUri: 'https://mmarsden89.github.io/national-park-prototype/callback',\n    responseType: 'id_token',\n    scope: 'openid profile'\n  })\n\n  this.getProfile = this.getProfile.bind(this)\n  this.handleAuthentication = this.handleAuthentication.bind(this)\n  this.isAuthenticated = this.isAuthenticated.bind(this)\n  this.signIn = this.signIn.bind(this)\n  this.signOut = this.signOut.bind(this)\n\n}\n\n  getProfile() {\n    return this.profile\n  }\n\n  getIdToken() {\n    return this.idToken\n  }\n\n  isAuthenticated() {\n    let expiresAt = JSON.parse(localStorage.getItem('expires_at'))\n    return new Date().getTime() < this.expiresAt &&\n    new Date().getTime() < expiresAt\n  }\n\n  signIn() {\n    this.auth0.authorize()\n  }\n\n  handleAuthentication() {\n      this.auth0.parseHash((err, authResult) => {\n        if (authResult || authResult.idToken) {\n          this.setSession(authResult)\n        } else if (err) {\n        history.replace(\"/\")\n      }\n      })\n      history.replace('/')\n  }\n\n  setSession(authResult) {\n    this.idToken = authResult.idToken\n    this.profile = authResult.idTokenPayload\n    this.accessToken = authResult.accessToken\n    // set the time that the id token will expire at\n    this.expiresAt = authResult.idTokenPayload.exp * 1000\n    localStorage.setItem('profile', authResult.idTokenPayload)\n    localStorage.setItem('access_token', authResult.accessToken);\n    localStorage.setItem('id_token', authResult.idToken);\n    localStorage.setItem('expires_at', authResult.idTokenPayload.exp * 1000);\n  }\n\n  signOut() {\n    this.auth0.logout({\n      returnTo: 'https://mmarsden89.github.io/national-park-prototype',\n      clientID: '1HbLQ6nRcscQnN2UY5i79et3CRBQq3zQ',\n    })\n    // navigate to the home route\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('expires_at');\n    history.replace('/')\n  }\n\n  silentAuth() {\n    return new Promise((resolve, reject) => {\n      this.auth0.checkSession({}, (err, authResult) => {\n        if (err) return reject(err)\n        this.setSession(authResult)\n        resolve()\n      })\n    })\n  }\n}\n\nconst auth = new Auth()\n\nexport default auth\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport SinglePark from './SinglePark'\nimport apiUrl from './apiConfig'\nimport auth from './Auth'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusCircle, faMinusCircle } from '@fortawesome/free-solid-svg-icons'\n\nclass Parks extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      parks: [],\n      filter: [],\n      modal: false,\n      selectedTarget: '',\n      user: {\n        list: []\n      }\n    }\n     this.getUser = this.getUser.bind(this)\n  }\n\n  async componentDidMount () {\n    const parkResponse = await axios(`${apiUrl}/parks`)\n    this.setState({ parks: parkResponse.data.parks, filter: parkResponse.data.parks })\n    const temp = {list: []}\n    this.setState({ user: temp})\n    await this.getUser()\n    console.log(await auth.isAuthenticated())\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('shouldcomponentupdate added')\n    return nextState !== this.state || nextProps !== this.props\n  }\n\n  async getUser () {\n    if (this.props.auth.isAuthenticated()) {\n      const userResponse = await axios(`${apiUrl}/users/${this.props.auth.getProfile().nickname}`)\n      console.log(userResponse.data.User, userResponse.data.User.length)\n      if (userResponse.data.User.length < 1) {\n        this.createUser()\n          .then(this.getUser)\n      } else {\n      this.setState({user: userResponse.data.User[0]})\n      }\n    }\n  }\n\n  async createUser() {\n      await axios({\n        url: apiUrl + '/users',\n        method: 'POST',\n        data: {\n          user: {\n            nickname: this.props.auth.getProfile().nickname\n          }\n        }\n      })\n  }\n\n  openModal = event => {\n    this.setState({ modal: !this.state.modal, selectedTarget: event.currentTarget.id })\n  }\n\n  closeModal = () => {\n    if (this.state.modal) {\n    this.setState({modal: false})\n    }\n  }\n\n  handleVisit = async event => {\n  const id = event.target.id\n  await axios({\n    url: apiUrl + `/Users/${this.state.user.nickname}`,\n    method: 'PATCH',\n    data: {\n      user: {\n        list: id\n      }\n    }\n  })\n  this.getUser()\n}\n\n  visited = () => {\n    const filter = this.state.parks.filter((park) => {\n      return this.state.user.list.includes(park._id)\n    })\n    this.setState({filter: filter})\n  }\n\n  notVisited = () => {\n    const filter = this.state.parks.filter((park) => {\n      return !this.state.user.list.includes(park._id)\n    })\n    this.setState({filter: filter})\n  }\n\n  all = () => {\n    this.setState({filter: this.state.parks })\n  }\n\n\n  render () {\n    const { filter } = this.state\n    const { list } = this.state.user\n    const filler =\n      <div className=\"filler\">\n      </div>\n    const buttonsHTML =\n      <div className=\"filter-buttons-div\">\n        <button onClick={this.all} className=\"filter-buttons\">All</button>\n        <button onClick={this.visited} className=\"filter-buttons\">Visted</button>\n        <button onClick={this.notVisited} className=\"filter-buttons\">Not-Visited</button>\n      </div>\n    const parksHTML = filter.map(park => (\n      <div key={park._id} id={park._id} className=\"parks\">\n      {auth.isAuthenticated() ? (list.includes(park._id) ?\n      <FontAwesomeIcon icon={faMinusCircle} onClick={this.handleVisit} id={park._id} className=\"plusOrMinus\"/>\n    : <FontAwesomeIcon icon={faPlusCircle} onClick={this.handleVisit} id={park._id} className=\"plusOrMinus\"/>) : null}\n        <div className=\"park-container\"onClick={this.openModal} id={park._id}>\n        <img src={park.thumbnail}\n             alt={\"thumbnail of \" + park.name}\n             className=\"park-thumbnail\"/>\n          <div className=\"info-grid\">\n            <p className=\"park-name\">{park.name} National Park</p>\n            <p className=\"info\"> <b>Location:</b> {park.location} <b>Founded:</b> {park.established}</p>\n            <p className=\"info\"> <b>Total Area:</b> {park.area} <b>Total Visitors:</b> {park.rec_visitors}</p>\n            <p className=\"info desc\">{park.description}</p>\n          </div>\n        </div>\n      </div>\n    ))\n    return (\n      <div className=\"container\" onClick={this.closeModal}>\n        {auth.isAuthenticated() ? buttonsHTML : filler}\n        {parksHTML}\n        {this.state.modal ? <SinglePark target={this.state.selectedTarget}/> : null}\n      </div>\n    )\n  }\n}\n\nexport default Parks\n","import React, { Component } from 'react'\n\nconst headerImage = require('./forest.png')\n\nclass Header extends Component {\n\n\n  render () {\n    return (\n      <div className=\"header-app\">\n        <img src={headerImage}\n          alt=\"\"\n          className=\"image-header\"/>\n        <h1 className=\"logo-text\">NATIONAL PARKS</h1>\n      </div>\n    )\n  }\n}\n\nexport default Header\n","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSignOutAlt, faSignInAlt } from '@fortawesome/free-solid-svg-icons'\nimport auth from './Auth'\n\nclass NavBar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      authenticated: false\n    }\n  }\n  componentDidMount () {\n    if (auth.isAuthenticated()) {\n      this.setState({ authenticated: true})\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextState !== this.state || nextProps !== this.props\n  }\n\n  signOut() {\n    auth.signOut();\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar\">\n        <div className=\"navbar-container\">\n          {\n            !this.props.auth.isAuthenticated() &&\n            <FontAwesomeIcon icon={faSignInAlt} className=\"signout\" onClick={auth.signIn}/>\n          }\n          {\n            this.props.auth.isAuthenticated() &&\n            <div className=\"profile-area\">\n              <label className=\"nickname\">{this.props.auth.getProfile().nickname}</label>\n              <FontAwesomeIcon icon={faSignOutAlt} onClick={() => {auth.signOut()}} className=\"signout\"/>\n            </div>\n          }\n        </div>\n        <div className=\"gradient\">\n        </div>\n      </nav>\n    )\n  }\n}\n\nexport default withRouter(NavBar);\n","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport history from './History'\nimport auth from './Auth'\n\nclass Callback extends Component {\n\n  async componentDidMount() {\n    await auth.handleAuthentication();\n    history.replace('/');\n  }\n\n  render() {\n    return (\n      <div className=\"callback-load\">\n        <p>Loading profile...</p>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Callback);\n","import React from 'react'\nimport ScrollToTop from 'react-scroll-up'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCaretSquareUp } from '@fortawesome/free-solid-svg-icons'\n\nfunction Scroll() {\n  return (\n    <ScrollToTop\n      showUnder={160}\n      duration={1500}\n      easing={'easeInOutCubic'}\n      style={{'transitionDuration': '1s'}}>\n      <FontAwesomeIcon icon={faCaretSquareUp} className=\"scrollUp\"/>\n    </ScrollToTop>\n)}\n\nexport default Scroll\n","import React, {Component} from 'react';\nimport './App.scss';\nimport './Navbar.scss';\nimport './Scroll.scss';\nimport Parks from './Parks'\nimport {Route, withRouter} from 'react-router-dom';\nimport Header from './Header'\nimport NavBar from './NavBar'\nimport Callback from './Callback';\nimport Scroll from './Scroll'\nimport auth from './Auth'\n\n// Admin\n// import CreateParks from './Admin/CreateParks'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checkingSession: true,\n    }\n  }\n\n  async componentDidMount() {\n    if (this.props.location.pathname === '/callback') {\n      this.setState({checkingSession:false});\n      return\n  }\n    try {\n      await auth.silentAuth();\n      this.forceUpdate();\n    } catch (err) {\n      if (err.error !== 'login_required') console.log(err.error);\n  }\n    this.setState({checkingSession:false});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <NavBar auth={auth}/>\n          <Scroll/>\n        <div className=\"App-body\">\n              <Header/>\n              <Parks auth={auth}/>\n            <Route path=\"/callback\" render={(props) => {\n              auth.handleAuthentication(props);\n              return <Callback {...props}/>\n            }}\n            />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Router } from 'react-router-dom'\nimport History from './History'\n\nconst appJsx = (\n  <Router history={History}>\n    <App />\n  </Router>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}